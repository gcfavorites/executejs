<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">
  <binding id="keyinputbox">
    <resources>
       <stylesheet src="common_bindings.css"/>
    </resources>
    <content>
      <xul:textbox xbl:inherits="size, context" 
                   readonly="true" 
                   class="keyinputbox" 
                   onkeydown="parentNode.onKeyDown(event);"
                   onkeyup="//parentNode.stopEvent(event);return false;"
                   onkeypress="//parentNode.stopEvent(event);return false;"
		   onfocus="style.background='#faa';"
		   onblur="style.background='#fff';"
		   />
    </content>
    <implementation>
      <!-- Stores the keyCode and modifiers in a single value -->
      <property name="combinedValue"
                onset="return this.setCombinedValue(val);"
                onget="return this.getCombinedValue();"/>           
      <property name="allowModifiers"
                onset="return this.setAttribute('allowmodifiers',val);"
                onget="return this.getAttribute('allowmodifiers');"/>
                <!-- onset="return this.updateAttr('modifiers',val);" -->
      <property name="modifiers"
                onget="return this.getAttribute('modifiers');"/>
                <!-- onset="return this.updateAttr('keycode',val);" -->
      <property name="keyCode"
                onget="return this.getAttribute('keycode');"/>
       
      
      <constructor>
        if (this.getAttribute('keycode') != '')
          this.updateDisplay();
      </constructor>
      
      <method name="updateAttr">
        <parameter name="attr"/>
        <parameter name="value"/>
        <body>
          <![CDATA[
            if (attr == 'modifiers' && this.getAttribute('allowmodifiers') == 'false')
              return false;
            this.setAttribute(attr, value);
            this.updateDisplay();
            return true;
          ]]>
        </body>
      </method>
       
      <method name="updateDisplay">
        <body>
          document.getAnonymousNodes(this)[0].value = this.getKeyString();
        </body>
      </method>
      
      <method name="getKeyString">
      	<body>
            return this.getStringForCombinedKeyCode(this.getCombinedValue())
      	</body>
      	
      </method>
      <method name="onKeyDown">
        <parameter name="event"/>
        <body>
          <![CDATA[
             var keyCode = event.keyCode
             if (!event.ctrlKey && !event.altKey && !event.metaKey && event.keyCode==KeyEvent.DOM_VK_TAB){
                 return;
             }
             this.setKey(event);
             this.stopEvent(event);
          ]]>
        </body>
      </method> 
    
      <method name="stopEvent">
        <parameter name="event"/>
        <body>
          event.preventDefault();
          event.stopPropagation();
        </body>
      </method>
        
      
      <method name="setKey">
        <parameter name="event"/>
        <body>
         this.updateAttr('keycode',event.keyCode);
         this.updateAttr('modifiers',this.getModifiers(event));
         this.updateDisplay();
        </body>
      </method>   
      
      
      <method name="getModifiers">
        <parameter name="event"/>
        <body>
          return event.altKey * Event.ALT_MASK |
                 event.ctrlKey * Event.CONTROL_MASK |
                 event.shiftKey * Event.SHIFT_MASK |
                 event.metaKey * Event.META_MASK;
        </body>
      </method> 
      
      <method name="setCombinedValue">
        <parameter name="value"/>
        <body>
          <![CDATA[
            if(value=="0"){
                this.updateAttr('modifiers', 0);
                this.updateAttr('keycode', "");
            }else{
                this.updateAttr('modifiers', value & 0xF);
                this.updateAttr('keycode', value >> 4);
            }   
          ]]>
        </body>
      </method>
      
      <method name="getCombinedValue">
        <body>
          <![CDATA[
            return this.keyCode << 4 | this.modifiers;
          ]]>
        </body>
      </method>
      
      <method name="getStringForCombinedKeyCode">
      	<parameter name="combinedKeyCode"/>
      	<body>
      		return KeyInputbox.getStringForCombinedKeyCode(combinedKeyCode)
      	</body>
      </method>
    </implementation>
  </binding>
</bindings>
